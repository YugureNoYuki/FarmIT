@model farmLogin.Models.Sale

@{
    ViewBag.Title = "Capture Harvest Sale";
}

<style>
    /*Confirmation*/
    /*Green Button*/

    #Confirm {
        font-family: Arial;
        font-weight: 600;
        font-size: 12px;
        display: inline-block;
        background-color: #52963f;
        border-color: #52963f;
        border-radius: 5px;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.5);
    }

        #Confirm:hover {
            background-color: #24820e;
            border-color: #24820e;
            transition: 0.3s;
        }
    /*Red Button*/
    #Cancel {
        font-family: Arial;
        font-weight: 600;
        font-size: 12px;
        display: inline-block;
        background-color: #e5543d;
        border-color: #e0422a;
        border-radius: 5px;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.5);
    }

        #Cancel:hover {
            background-color: #bc1c03;
            border-color: #bc1c03;
            transition: 0.3s;
        }

    .breadcrumb {
        display: inline-block;
        overflow: hidden;
        border-radius: 0px;
        counter-reset: flag;
        text-align: center;
        font-family: Arial;
        font-size: 12px;
        font-weight: 700;
        position: center;
        background: #3594C4;
        margin-left: -15px;
    }

        .breadcrumb a {
            text-decoration: none;
            outline: none;
            display: block;
            float: left;
            font-size: 12px;
            line-height: 36px;
            padding: 0 10px 0 60px;
            background: #d1d1d1;
            color: black;
            position: relative;
            box-shadow: 0 3px 6px black;
        }

            .breadcrumb a:first-child {
                padding-left: 46px;
                border-radius: 5px 0 0 5px;
            }

                .breadcrumb a:first-child:before {
                    left: 14px;
                }

            .breadcrumb a:last-child {
                border-radius: 0 5px 5px 0;
                padding-right: 20px;
            }

            .breadcrumb a:after {
                content: '';
                position: absolute;
                top: 0;
                right: -18px;
                width: 36px;
                height: 36px;
                transform: scale(0.707) rotate(45deg);
                z-index: 1;
                background: #d1d1d1;
                box-shadow: 2px -2px 0 2px rgba(0, 0, 0, 0.4), 3px -3px 0 2px rgba(255, 255, 255, 0.1);
                border-radius: 0 5px 0 50px;
            }

            .breadcrumb a:last-child:after {
                content: none;
            }

            .breadcrumb a:before {
                content: counter(flag);
                counter-increment: flag;
                border-radius: 50%;
                width: 20px;
                height: 20px;
                line-height: 20px;
                margin: 8px 0;
                position: absolute;
                top: 0;
                left: 30px;
                color: black;
                background: white;
            }

            .breadcrumb a:hover, .breadcrumb a.active,
            .breadcrumb a:hover:after, .breadcrumb a.active:after {
                transition: all 0.5s;
                background: #47A447;
                color: white;
            }

    body {
        background-color: #3594C4;
    }

    .panel {
        box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.6);
    }

    #PanelContent {
        color: black;
        margin-left: 60px;
    }

    .panel:hover span {
        color: #1b8bc6;
        transition: 0.5s;
    }

    .panel-success {
        color: green;
    }

    .btn {
        font-weight: 600;
        background-color: #47A447;
        font-family: Arial;
        font-size: 14px;
        display: inline-block;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.5);
        width: 100px;
        border-radius: 5%;
    }

        .btn:hover {
            background-color: #25820F;
            transition: 0.5s;
        }

    #btnBack {
        left: -10px;
    }

    #btnSave {
        right: -10px;
    }

    .panel > .panel-heading {
        background-image: none;
        background-color: #d8d8d8;
    }

    #addInventoryType {
        width: 175px;
        background-color: #385f99;
        border-color: #385f99;
        box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.6);
    }

        #addInventoryType:hover {
            background: #1955a0;
            border-color: #1955a0;
        }
</style>

<header>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
</header>



<div class="breadcrumb">
    <a href="#">Home</a>
    @Html.ActionLink("Crop Action Page", "ActionPage", "Plantation")
    @Html.ActionLink("Manage Harvest Sale", "Index", "HarvestSale")
    <a class="active">Capture Harvest Sale</a>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="form-group">*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <br />
    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b><span class="fas fa-coins"></span> &nbsp;Capture Harvest Sale Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.SaleDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SaleDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SaleDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.SaleQty, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SaleQty, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SaleQty, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.UnitID, "UnitID", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.DropDownList("UnitID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.SaleAmnt, htmlAttributes: new { @class = "control-labe" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SaleAmnt, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SaleAmnt, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.PurchaseAgreement, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PurchaseAgreement, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PurchaseAgreement, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



        <div class="input-group">
            <div class="input-group-btn">
                <button class="btn btn-success" type="submit" id="btnSave">
                    <span class="glyphicon glyphicon-save"></span>
                    Save
                </button>
            </div>
        </div>

}
<div class="row">

    <div class="col-xs-6 col-md-4">
        @using (Html.BeginForm("Index", "HarvestSale", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="col-xs-6 col-md-4">
                <div class=input-group>
                    <div class="input-group-btn">
                        <button class="btn btn-success" type="submit" id="btnBack">
                            <span class="glyphicon glyphicon-arrow-left"></span>
                            Back
                        </button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
        var element = document.getElementById("navCrop");
        element.classList.add("active");
</script>