@model farmLogin.Models.Customer
@{
    ViewBag.Title = "Edit";
}
<style>
    .breadcrumb {
        display: inline-block;
        overflow: hidden;
        border-radius: 0px;
        counter-reset: flag;
        text-align: center;
        font-family: Arial;
        font-size: 12px;
        font-weight: 700;
        position: center;
        background: #87CEFA;
        margin-left: -15px;
    }

        .breadcrumb a {
            text-decoration: none;
            outline: none;
            display: block;
            float: left;
            font-size: 12px;
            line-height: 36px;
            padding: 0 10px 0 60px;
            background: #d1d1d1;
            color: black;
            position: relative;
            box-shadow: 0 3px 6px black;
        }

            .breadcrumb a:first-child {
                padding-left: 46px;
                border-radius: 5px 0 0 5px;
            }

                .breadcrumb a:first-child:before {
                    left: 14px;
                }

            .breadcrumb a:last-child {
                border-radius: 0 5px 5px 0;
                padding-right: 20px;
            }

            .breadcrumb a:after {
                content: '';
                position: absolute;
                top: 0;
                right: -18px;
                width: 36px;
                height: 36px;
                transform: scale(0.707) rotate(45deg);
                z-index: 1;
                background: #d1d1d1;
                box-shadow: 2px -2px 0 2px rgba(0, 0, 0, 0.4), 3px -3px 0 2px rgba(255, 255, 255, 0.1);
                border-radius: 0 5px 0 50px;
            }

            .breadcrumb a:last-child:after {
                content: none;
            }

            .breadcrumb a:before {
                content: counter(flag);
                counter-increment: flag;
                border-radius: 50%;
                width: 20px;
                height: 20px;
                line-height: 20px;
                margin: 8px 0;
                position: absolute;
                top: 0;
                left: 30px;
                color: black;
                background: white;
            }

            .breadcrumb a:hover, .breadcrumb a.active,
            .breadcrumb a:hover:after, .breadcrumb a.active:after {
                transition: all 0.5s;
                background: #47A447;
                color: white;
            }

    body {
        background-color: #87CEFA;
    }

    .panel {
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.5);
    }

    #PanelContent {
        color: black;
        margin-left: 60px;
    }

    .panel:hover span {
        color: #1b8bc6;
        transition: 0.5s;
    }

    .panel-success {
        color: green;
    }

    .btn {
        font-weight: 600;
        background-color: #47A447;
        font-family: Arial;
        font-size: 14px;
        display: inline-block;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.5);
        width: 100px;
        border-radius: 5%;
    }

        .btn:hover {
            background-color: #25820F;
            transition: 0.5s;
        }

    #btnBack {
        left: -10px;
    }

    #btnSave {
        right: -10px;
    }

    .panel > .panel-heading {
        background-image: none;
        background-color: #d8d8d8;
    }
</style>


<div class="breadcrumb">
    @Html.ActionLink("Home", "Index", "Home")
    @Html.ActionLink("Admin Action Page", "ActionPage", "Admin")
    @Html.ActionLink("Manage Customers", "Index", "Customer")
    <a class="active">Update Customer</a>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CustomerID)
    /*Personal Details*/
    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b><span class="glyphicon glyphicon-user"></span> &nbsp;Update Customer Personal Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.CustomerFName, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.CustomerFName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerFName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.CustomerLName, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.CustomerLName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerLName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6" style="text-align: left">
                                @Html.LabelFor(model => model.CustomerContactNum, htmlAttributes: new { @class = "control-label " })
                            </div>

                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.CustomerContactNum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerContactNum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.ContactPersonalEmailAddress, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.ContactPersonalEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactPersonalEmailAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    /*Company Details*/
    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b><span class="glyphicon glyphicon-briefcase"></span> &nbsp;Update Company Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.CompanyTelNum, "Tel Num", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.CompanyTelNum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyTelNum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    // Address Details
    <div class="panel panel-success">
        <div class="panel-heading">
            <h3 class="panel-title" style="color:black;"><b><span class="glyphicon glyphicon-map-marker"></span> &nbsp;Update Address Details</b></h3>
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.Surburb, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.Surburb, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surburb, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row" id="PanelContent">
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.DropDownList("ProvinceID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" id="PanelContent">

                    <div class="col-xs-6 col-md-6">
                        <div class="form-group">
                            <div class="col-xs-6 col-md-6">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-xs-6 col-md-10">
                                @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="input-group">
        <div class="input-group-btn">
            <button class="btn btn-success" type="button" id="btnSave" data-toggle="modal" data-target="#confirm-submit">
                <span class="glyphicon glyphicon-save"></span>
                Save
            </button>
        </div>
    </div>
                <!-- Modal -->
            <div class="modal fade" id="confirm-submit" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" aria-hidden="false" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Confirmation</h4>
                        </div>
                        <div class="modal-body">
                            <p>Please confirm that you want to save these updated details.</p>

                        </div>
                        <div class="modal-footer">
                            <button id="Confirm" type="submit" class="btn btn-success" style="float:right"y>CONFIRM</button>
                            <button id ="Cancel" type="button" class="btn btn-warning" data-dismiss="modal" style="float: left">CANCEL</button>
                        </div>
                    </div>

                </div>
            </div>

}
<div class="row">

    <div class="col-xs-6 col-md-4">
        @using (Html.BeginForm("Index", "Customer", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="col-xs-6 col-md-4">
                <div class=input-group>
                    <div class="input-group-btn">
                        <button class="btn btn-success" type="submit" id="btnBack">
                            <span class="glyphicon glyphicon-arrow-left"></span>
                            Back
                        </button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <script type="text/javascript">
        @Model.JavaScriptToRun
    </script>
    <script type="text/javascript">
        @Model.JavaScriptToRun
        function mySuccess() {

            //alert('Item has successfully been added.');
            //window.location = "/InventoryType/Index";

            swal({
                icon: "success",
                title: "Success!",
                text: "Item has successfully been updated.",
                type: "warning"
            }).then(function () {
                window.location = "/Customer/Index"
            })
        }

        //Active Navbar
        var element = document.getElementById("navAdmin");
        element.classList.add("active");
    </script>
}

